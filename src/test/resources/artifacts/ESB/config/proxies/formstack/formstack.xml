<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<proxy name="formstack" startOnLoad="true" statistics="disable" trace="disable" transports="https,http"
   xmlns="http://ws.apache.org/ns/synapse">
   <target>
      <inSequence onError="faultHandlerSeq">
         <property name="accessToken" expression="json-eval($.accessToken)" />
         <property name="format" expression="json-eval($.format)" />
         <property name="apiUrl" expression="json-eval($.apiUrl)" />
         <property name="formId" expression="json-eval($.formId)" />
         <property name="folders" expression="json-eval($.folders)" />
         <property name="submissionId" expression="json-eval($.submissionId)" />
         <property name="page" expression="json-eval($.page)" />
         <property name="perPage" expression="json-eval($.perPage)" />
         <property name="sort" expression="json-eval($.sort)" />
         <property name="data" expression="json-eval($.data)" />
         <property name="expandData" expression="json-eval($.expandData)" />
         <property name="timestamp" expression="json-eval($.timestamp)" />
         <property name="userAgent" expression="json-eval($.userAgent)" />
         <property name="remoteAddress" expression="json-eval($.remoteAddress)" />
         <property name="paymentStatus" expression="json-eval($.paymentStatus)" />
         <property name="encryptionPassword" expression="json-eval($.encryptionPassword)" />
         <property name="name" expression="json-eval($.name)" />
         <property name="message" expression="json-eval($.message)" />
         <property name="attachLimit" expression="json-eval($.attachLimit)" />
         <property name="mailformat" expression="json-eval($.mailformat)" />
         <property name="fromType" expression="json-eval($.fromType)" />
         <property name="fromValue" expression="json-eval($.fromValue)" />
         <property name="recipients" expression="json-eval($.recipients)" />
         <property name="subject" expression="json-eval($.subject)" />
         <property name="type" expression="json-eval($.type)" />
         <property name="hideEmpty" expression="json-eval($.hideEmpty)" />
         <property name="showSection" expression="json-eval($.showSection)" />
         <property name="notificationEmailId" expression="json-eval($.notificationEmailId)" />
         <property name="toField" expression="json-eval($.toField)" />
         <property name="sender" expression="json-eval($.sender)" />
         <property name="delay" expression="json-eval($.delay)" />
         <property name="confirmationEmailId" expression="json-eval($.confirmationEmailId)" />
         <property name="fieldId" expression="json-eval($.fieldId)"/>
         <property name="description" expression="json-eval($.description)"/>
         <property name="hidden" expression="json-eval($.hidden)"/>
         <property name="defaultValue" expression="json-eval($.defaultValue)"/>
         <property name="required" expression="json-eval($.required)"/>
         <property name="readonly" expression="json-eval($.readonly)"/>
         <formstack.init>
            <accessToken>{$ctx:accessToken}</accessToken>
            <format>{$ctx:format}</format>
            <apiUrl>{$ctx:apiUrl}</apiUrl>
         </formstack.init>
         <switch source="get-property('transport', 'Action')">
            <case regex="urn:getForm">
               <formstack.getForm>
                  <formId>{$ctx:formId}</formId>
               </formstack.getForm>
            </case>
            <case regex="urn:listForms">
               <formstack.listForms>
                  <folders>{$ctx:folders}</folders>
               </formstack.listForms>
            </case>
            <case regex="urn:copyForm">
               `
               <formstack.copyForm>
                  <formId>{$ctx:formId}</formId>
               </formstack.copyForm>
            </case>
            <case regex="urn:getSubmission">
               <formstack.getSubmission>
                  <encryptionPassword>{$ctx:encryptionPassword}</encryptionPassword>
                  <submissionId>{$ctx:submissionId}</submissionId>
               </formstack.getSubmission>
            </case>
            <case regex="urn:listSubmissions">
               <formstack.listSubmissions>
                  <formId>{$ctx:formId}</formId>
                  <page>{$ctx:page}</page>
                  <perPage>{$ctx:perPage}</perPage>
                  <sort>{$ctx:sort}</sort>
                  <data>{$ctx:data}</data>
                  <expandData>{$ctx:expandData}</expandData>
               </formstack.listSubmissions>
            </case>
            <case regex="urn:updateSubmission">
               <formstack.updateSubmission>
                  <submissionId>{$ctx:submissionId}</submissionId>
                  <timestamp>{$ctx:timestamp}</timestamp>
                  <userAgent>{$ctx:userAgent}</userAgent>
                  <remoteAddress>{$ctx:remoteAddress}</remoteAddress>
                  <paymentStatus>{$ctx:paymentStatus}</paymentStatus>
               </formstack.updateSubmission>
            </case>
            <case regex="urn:createNotificationEmail">
               <formstack.createNotificationEmail>
                  <name>{$ctx:name}</name>
                  <message>{$ctx:message}</message>
                  <attachLimit>{$ctx:attachLimit}</attachLimit>
                  <mailformat>{$ctx:mailformat}</mailformat>
                  <fromType>{$ctx:fromType}</fromType>
                  <fromValue>{$ctx:fromValue}</fromValue>
                  <recipients>{$ctx:recipients}</recipients>
                  <subject>{$ctx:subject}</subject>
                  <type>{$ctx:type}</type>
                  <hideEmpty>{$ctx:hideEmpty}</hideEmpty>
                  <showSection>{$ctx:showSection}</showSection>
                  <formId>{$ctx:formId}</formId>
               </formstack.createNotificationEmail>
            </case>
            <case regex="urn:getNotificationEmail">
               <formstack.getNotificationEmail>
                  <notificationEmailId>{$ctx:notificationEmailId}</notificationEmailId>
               </formstack.getNotificationEmail>
            </case>
            <case regex="urn:updateNotificationEmail">
               <formstack.updateNotificationEmail>
                  <notificationEmailId>{$ctx:notificationEmailId}</notificationEmailId>
                  <subject>{$ctx:subject}</subject>
                  <recipients>{$ctx:recipients}</recipients>
                  <fromValue>{$ctx:fromValue}</fromValue>
                  <message>{$ctx:message}</message>
                  <name>{$ctx:name}</name>
               </formstack.updateNotificationEmail>
            </case>
            <case regex="urn:listNotificationEmails">
               <formstack.listNotificationEmails>
                  <formId>{$ctx:formId}</formId>
               </formstack.listNotificationEmails>
            </case>
            <case regex="urn:createConfirmationEmail">
               <formstack.createConfirmationEmail>
                  <name>{$ctx:name}</name>
                  <toField>{$ctx:toField}</toField>
                  <sender>{$ctx:sender}</sender>
                  <subject>{$ctx:subject}</subject>
                  <message>{$ctx:message}</message>
                  <delay>{$ctx:delay}</delay>
                  <formId>{$ctx:formId}</formId>
               </formstack.createConfirmationEmail>
            </case>
            <case regex="urn:getConfirmationEmail">
               <formstack.getConfirmationEmail>
                  <confirmationEmailId>{$ctx:confirmationEmailId}</confirmationEmailId>
               </formstack.getConfirmationEmail>
            </case>
            <case regex="urn:updateConfirmationEmail">
               <formstack.updateConfirmationEmail>
                  <name>{$ctx:name}</name>
                  <toField>{$ctx:toField}</toField>
                  <sender>{$ctx:sender}</sender>
                  <subject>{$ctx:subject}</subject>
                  <message>{$ctx:message}</message>
                  <delay>{$ctx:delay}</delay>
                  <confirmationEmailId>{$ctx:confirmationEmailId}</confirmationEmailId>
               </formstack.updateConfirmationEmail>
            </case>
            <case regex="urn:listConfirmationEmails">
               <formstack.listConfirmationEmails>
                  <formId>{$ctx:formId}</formId>
               </formstack.listConfirmationEmails>
            </case>
            <case regex="urn:deleteForm">
               <formstack.deleteForm>
                  <formId>{$ctx:formId}</formId>
               </formstack.deleteForm>
            </case>
            <case regex="urn:updateFormField">
               <formstack.updateFormField>
                  <fieldId>{$ctx:fieldId}</fieldId>
                  <description>{$ctx:description}</description>
                  <hidden>{$ctx:hidden}</hidden>
                  <defaultValue>{$ctx:defaultValue}</defaultValue>
                  <required>{$ctx:required}</required>
                  <readonly>{$ctx:readonly}</readonly>
               </formstack.updateFormField>
            </case>
         </switch>
         <respond />
      </inSequence>
      <outSequence>
         <log />
         <send />
      </outSequence>
   </target>
   <description />
</proxy>