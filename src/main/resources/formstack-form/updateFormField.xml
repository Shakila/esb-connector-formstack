<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<!-- Method Documentation URL: http://developers.formstack.com/docs/field-id-put -->
<template name="updateFormField" xmlns="http://ws.apache.org/ns/synapse">
   <parameter name="fieldId" description="ID of the field of the form to be updated." />
   <parameter name="fieldType" description="Type of the field." />
   <parameter name="label" description="label of the field." />
   <parameter name="hideLabel" description="Flag to show or hide the label." />
   <parameter name="description" description="Description of the field." />
   <parameter name="descriptionCallout" description="Flag to show the description in a callout box." />
   <parameter name="defaultValue" description="Value of the field." />
   <parameter name="options" description="Array of option labels." />
   <parameter name="optionsValues" description="Array of option values." />
   <parameter name="required" description="Flag to mark field as required" />
   <parameter name="readonly" description="Flag to not allow the field to be changed." />
   <parameter name="hidden" description="Flag to mark the field as hidden." />
   <parameter name="unique" description="Flag to mark the field as requiring a unique value." />
   <parameter name="colspan" description="Number of columns the field should span." />
   <parameter name="sort" description="Sort index for the field (Starts at 0)." />
   <sequence>
      <property name="uri.var.fieldId" expression="$func:fieldId" />
      <property name="uri.var.fieldType" expression="$func:fieldType" />
      <property name="uri.var.label" expression="$func:label" />
      <property name="uri.var.hideLabel" expression="$func:hideLabel" />
      <property name="uri.var.description" expression="$func:description" />
      <property name="uri.var.descriptionCallout" expression="$func:descriptionCallout" />
      <property name="uri.var.defaultValue" expression="$func:defaultValue" />
      <property name="uri.var.options" expression="$func:options" />
      <property name="uri.var.optionsValues" expression="$func:optionsValues" />
      <property name="uri.var.required" expression="$func:required" />
      <property name="uri.var.readonly" expression="$func:readonly" />
      <property name="uri.var.hidden" expression="$func:hidden" />
      <property name="uri.var.unique" expression="$func:unique" />
      <property name="uri.var.colspan" expression="$func:colspan" />
      <property name="uri.var.sort" expression="$func:sort" />
      <script language="js">
         <![CDATA[
            var jsonPayload = new Object();
            var label = mc.getProperty('uri.var.label');
            var fieldType = mc.getProperty('uri.var.fieldType');
            var hideLabel = mc.getProperty('uri.var.hideLabel');
            var description = mc.getProperty('uri.var.description');
            var defaultValue = mc.getProperty('uri.var.defaultValue');
            var descriptionCallout = mc.getProperty('uri.var.descriptionCallout');
            var options = mc.getProperty('uri.var.options');
            var optionsValues = mc.getProperty('uri.var.optionsValues');
            var hidden = mc.getProperty('uri.var.hidden');
            var required = mc.getProperty('uri.var.required');
            var readonly = mc.getProperty('uri.var.readonly');
            var unique = mc.getProperty('uri.var.unique');
            var colspan = mc.getProperty('uri.var.colspan');
            var sort = mc.getProperty('uri.var.sort');           
            if (description != null && description != ""){
               jsonPayload.description = description;
            }            
            if (label != null && label != ""){
               jsonPayload.label = label;
            }            
            if (hideLabel != null && hideLabel != ""){
               jsonPayload.hide_label =  hideLabel;
            }            
            if (descriptionCallout != null && descriptionCallout != ""){
               jsonPayload.description_callout = eval("(" + descriptionCallout + ")");
            }
            if (defaultValue != null && defaultValue != ""){
               jsonPayload.default_value = defaultValue;
            }
            if (options != null && options != ""){
               jsonPayload.options = eval("(" + options + ")");
            } 
            if (optionsValues != null && optionsValues != ""){
               jsonPayload.options_values = eval("(" + optionsValues + ")");
            } 
            if (required != null && required != ""){
               jsonPayload.required = required;
            }
            if (readonly != null && readonly != ""){
               jsonPayload.readonly = readonly;
            }
            if (hidden != null && hidden != ""){
               jsonPayload.hidden =  hidden;
            }
            if (unique != null && unique != ""){
               jsonPayload.uniq = unique;
            }
            if (colspan != null && colspan != ""){
               jsonPayload.colspan = colspan;
            }
            if (sort != null && sort != ""){
               jsonPayload.sort = sort;
            }
            if (fieldType != null && fieldType != ""){
               jsonPayload.field_type = fieldType;
            }
            mc.setPayloadJSON(jsonPayload);
         ]]>
      </script>
      <call>
         <endpoint>
            <http method="put" uri-template="{+uri.var.apiUrl}/field/{+uri.var.fieldId}.{+uri.var.format}" />
         </endpoint>
      </call>
      <!-- Remove custom Headers from the API Response -->
      <header name="X-Robots-Tag" action="remove" scope="transport" />
      <header name="P3P" action="remove" scope="transport" />
      <header name="Cache-Control" action="remove" scope="transport" />
   </sequence>
</template>